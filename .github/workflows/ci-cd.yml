name: CI/CD Pipeline

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run basic validation
      run: |
        python -c "import flask; print('Flask installed successfully')"
        # Aquí puedes añadir más pruebas según necesites

  deploy-development:
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to development environment
      run: |
        echo "Despliegue en entorno de desarrollo simulando"
        echo "Aquí irían los comandos para desplegar en tu servidor de desarrollo"
        # Ejemplo: rsync, scp, o comandos específicos de tu hosting

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to production
      run: |
        echo "Despliegue en entorno de producción"
        echo "Aquí irían los comandos para desplegar en producción"
        # Nota: Para un despliegue real necesitarías configurar secrets
